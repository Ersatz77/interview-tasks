{
    "format_version": "1.18.0",
    "minecraft:entity": {
        "description": {
            "identifier": "task:cube",
            "is_summonable": true,
            "is_spawnable": false,
            "is_experimental": false,
            "animations": {  
                "dialogue_controller": "controller.animation.cube.open_dialogue",
                "collision_controller": "controller.animation.cube.update_collision",
                "armor_stand_path_controller": "controller.animation.cube.path_to_armor_stand",
                "melee_attack_controller": "controller.animation.cube.melee_attack",
                "ranged_attack_controller": "controller.animation.cube.ranged_attack",
                "knockback_attack_controller": "controller.animation.cube.knockback_attack",
                "texture_controller": "controller.animation.cube.cycle_textures"
            },
            "scripts": {
                "animate": [
                    "dialogue_controller",
                    "collision_controller",
                    "armor_stand_path_controller",
                    "melee_attack_controller",
                    "ranged_attack_controller",
                    "knockback_attack_controller",
                    "texture_controller"
                ]
            }
        },
        "component_groups": {
            "task:wait_for_activation": {
                "minecraft:npc": {},
                "minecraft:interact": {
                    "interactions": [
                        {
                            "interact_text": "action.interact.cube.open_dialogue",
                            "on_interact": {
                                "event": "task:on_open_start_dialogue",
                                "target": "self" // Default is already 'self'
                            }
                        }
                    ]
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "all",
                            "deals_damage": false
                        }
                    ]
                }
            },
            "task:open_start_dialogue": {
                "minecraft:is_stunned": {}
            },

            "task:activated": {
                "minecraft:is_charged": {},
                "minecraft:type_family": {
                    "family": [
                        "cube",
                        "activated_cube",
                        "monster",
                        "mob"
                    ]
                },
                "minecraft:damage_sensor": {
                    "triggers": [
                        {
                            "cause": "fatal", // Not needed since the filters already check for it
                            "deals_damage": false,
                            "on_damage": {
                                "filters": [
                                    {

                                        "test": "has_damage",
                                        "subject": "self", // Not needed since it's a default
                                        "operator": "==", // Not needed since it's a default
                                        "value": "fatal"
                                    }
                                ],
                                "event": "task:on_fatal_damage",
                                "target": "self"
                            }
                        },
                        {
                            "cause": "projectile",
                            "deals_damage": true, // Not needed since it's a default
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "subject": "self",
                                            "operator": "==",
                                            "value": "projectile"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "damager",
                                            "operator": "==",
                                            "value": "arrow"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "damager",
                                            "operator": "==",
                                            "value": "player_arrow"
                                        }
                                    ]
                                },
                                "event": "task:on_hurt_by_player_arrow",
                                "target": "self"
                            }
                        },
                        {
                            "cause": "projectile",
                            "deals_damage": true,
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "subject": "self",
                                            "operator": "==",
                                            "value": "projectile"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "damager",
                                            "operator": "==",
                                            "value": "arrow"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "damager",
                                            "operator": "!=",
                                            "value": "player_arrow"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "cause": "attack",
                            "deals_damage": false,
                            "on_damage": {
                                "filters": {
                                    "all_of": [
                                        {
                                            "test": "has_damage",
                                            "subject": "self",
                                            "operator": "==",
                                            "value": "attack"
                                        },
                                        {
                                            "test": "is_family",
                                            "subject": "other",
                                            "operator": "==",
                                            "value": "player"
                                        }
                                    ]
                                },
                                "event": "task:on_attack_cube",
                                "target": "other"
                            }
                        },
                        {
                            "cause": "all",
                            "deals_damage": false
                        }
                    ]
                },
                "minecraft:on_target_acquired": {
                    "event": "task:on_target_acquired",
                    "target": "self"
                },
                "minecraft:movement": {
                    "value": 0.25
                },
                "minecraft:water_movement": {
                    "drag_factor": 0.95
                },
                "minecraft:movement.basic": {},
                "minecraft:navigation.walk": {
                    "avoid_damage_blocks": true,
                    "can_path_over_water": true
                },
                "minecraft:jump.static": {},
                "minecraft:behavior.float": {
                    "priority": 0
                },
                "minecraft:behavior.look_at_target": {
                    "priority": 7
                },
                "minecraft:behavior.random_stroll": {
                    "priority": 8
                },
                "minecraft:behavior.random_look_around": {
                    "priority": 9
                },
                "minecraft:behavior.nearest_prioritized_attackable_target": {
                    "priority": 2,
                    "reselect_targets": true,
                    "entity_types": [
                        {
                            "filters": {
                                "all_of": [
                                    {
                                        "test": "has_tag",
                                        "subject": "self",
                                        "operator": "==",
                                        "value": "is_prioritizing_armor_stand"
                                    },
                                    {
                                        "test": "is_family",
                                        "subject": "other",
                                        "operator": "==",
                                        "value": "armor_stand"
                                    }
                                ]
                            },
                            "priority": 0,
                            "max_dist": 64
                        },
                        {
                            "filters": {
                                "test": "is_family",
                                "subject": "other",
                                "value": "player"
                            },
                            "priority": 1,
                            "max_dist": 64
                        }
                    ]
                }
            },

            "task:attack_mode_switcher": {
                "minecraft:target_nearby_sensor": {
                    "inside_range": 20,
                    "outside_range": 20,
                    "must_see": true,
                    "on_inside_range": {
                        "event": "task:switch_to_melee",
                        "target": "self"
                    },
                    "on_outside_range": {
                        "event": "task:switch_to_ranged",
                        "target": "self"
                    }
                }
            },
            "task:melee_mode": {
                "minecraft:attack": {
                    "damage": 0
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 3
                }
            },
            "task:ranged_mode": {
                "minecraft:behavior.ranged_attack": {
                    "priority": 3,
                    "burst_shots": 1,
                    "burst_interval": 0.05,
                    "charge_charged_trigger": 0.0,
                    "charge_shoot_trigger": 2.0,
                    "attack_radius": 32.0,
                    "attack_radius_min": 10.0
                }
            },
            "task:ranged_attack_shoot": {
                "minecraft:spawn_entity": {
                    "entities": [
                        {
                            "min_wait_time": 0,
                            "max_wait_time": 0,
                            "num_to_spawn": 1,
                            "single_use": true,
                            "spawn_entity": "task:cube_arrow"
                        }
                    ]
                }
            },

            "task:detect_nearby_players": {
                "minecraft:entity_sensor": {
                    "sensor_range": 2,
                    "relative_range": false,
                    "event_filters": {
                        "all_of": [
                            {
                                "test": "is_family",
                                "subject": "other",
                                "operator": "==",
                                "value": "player"
                            },
                            {
                                "test": "is_target",
                                "subject": "other",
                                "operator": "==",
                                "value": true
                            }
                        ]
                    },
                    "event": "task:on_knockback_players"
                }
            },
            "task:knockback_players": {
                "minecraft:behavior.knockback_roar": {
                    "priority": 1,
                    "duration": 1,
                    "attack_time": 0.5,
                    "cooldown_time": 4,
                    "knockback_damage": 0,
                    "knockback_horizontal_strength": 4,
                    "knockback_vertical_strength": 4,
                    "knockback_range": 2,
                    "track_target": true,
                    "knockback_filters": [
                        {
                            "test": "is_family",
                            "subject": "other",
                            "operator": "==",
                            "value": "player"
                        }
                    ],
                    "on_roar_end": {
                        "event": "task:on_knockback_end",
                        "target": "self"
                    }
                }
            },
            "task:knockback_delay": {
                "minecraft:timer": {
                    "time": [
                        3.0,
                        8.0
                    ],
                    "randomInterval": true,
                    "looping": false,
                    "time_down_event": {
                        "event": "task:on_knockback_delay_end",
                        "target": "self"
                    }
                }
            },

            "task:detect_nearby_armor_stands": {
                "minecraft:entity_sensor": {
                    "sensor_range": 1,
                    "relative_range": true,
                    "event_filters": {
                        "all_of": [
                            {
                                "test": "is_family",
                                "subject": "other",
                                "operator": "==",
                                "value": "armor_stand"
                            },
                            {
                                "test": "is_target",
                                "subject": "other",
                                "operator": "==",
                                "value": true
                            }
                        ]
                    },
                    "event": "task:on_reached_armor_stand"
                },
                "minecraft:attack": {
                    "damage": 0
                },
                "minecraft:behavior.melee_attack": {
                    "priority": 3
                }
            },

            "task:hurt_by_player_arrow": {
                "minecraft:is_sheared": {}
            },

            "task:play_death_animation": {
                "minecraft:is_ignited": {},
                "minecraft:timer": {
                    "time": 0.73,
                    "looping": false,
                    "time_down_event": {
                        "event": "task:despawn",
                        "target": "self"
                    }
                }
            },

            "task:despawn": {
                "minecraft:instant_despawn": {}
            },

            "task:full_collision": {
                "minecraft:collision_box": {
                    "height": 1,
                    "width": 1
                }
            },
            "task:hurt_collision": {
                "minecraft:collision_box": {
                    "height": 0.5,
                    "width": 0.5
                }
            },

            "task:texture_1": {
                "minecraft:variant": {
                    "value": 0
                }
            },
            "task:texture_2": {
                "minecraft:variant": {
                    "value": 1
                }
            },
            "task:texture_3": {
                "minecraft:variant": {
                    "value": 2
                }
            }
        },
        "components": {
            "minecraft:type_family": {
                "family": [
                    "cube",
                    "monster",
                    "mob"
                ]
            },
            "minecraft:health": {
                "value": 20,
                "max": 0
            },
            "minecraft:physics": {},
            "minecraft:nameable": {
                "allow_name_tag_renaming": false,
                "always_show": false
            },
            "minecraft:pushable": {
                "is_pushable": true,
                "is_pushable_by_piston": true
            },
            "minecraft:follow_range": {
                "value": 64,
                "max": 64
            }
        },
        "events": {
            "minecraft:entity_spawned": {
                "add": {
                    "component_groups": [
                        "task:wait_for_activation",
                        "task:full_collision",
                        "task:texture_1"
                    ]
                }
            },

            "task:on_open_start_dialogue": {
                "add": {
                    "component_groups": [
                        "task:open_start_dialogue"
                    ]
                }
            },
            "task:reset_start_dialogue": {
                "remove": {
                    "component_groups": [
                        "task:open_start_dialogue"
                    ]
                }
            },

            "task:activate": {
                "remove": {
                    "component_groups": [
                        "task:wait_for_activation"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:activated"
                    ]
                }
            },

            "task:on_target_acquired": {
                "sequence": [
                    {
                        "filters": {
                            "test": "is_family",
                            "subject": "target",
                            "operator": "==",
                            "value": "armor_stand"
                        },
                        "remove": {
                            "component_groups": [
                                "task:attack_mode_switcher",
                                "task:detect_nearby_players",
                                "task:melee_mode",
                                "task:ranged_mode",
                                "task:knockback_players",
                                "task:knockback_delay"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "task:detect_nearby_armor_stands"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "is_family",
                            "subject": "target",
                            "operator": "==",
                            "value": "player"
                        },
                        "remove": {
                            "component_groups": [
                                "task:detect_nearby_armor_stands"
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "task:attack_mode_switcher",
                                "task:detect_nearby_players"
                            ]
                        }
                    }
                ]
            },

            "task:switch_to_melee": {
                "remove": {
                    "component_groups": [
                        "task:ranged_mode"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:melee_mode"
                    ]
                }
            },
            "task:switch_to_ranged": {
                "remove": {
                    "component_groups": [
                        "task:melee_mode"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:ranged_mode"
                    ]
                }
            },

            "task:on_ranged_attack_shoot": {
                "add": {
                    "component_groups": [
                        "task:ranged_attack_shoot"
                    ]
                }
            },
            "task:reset_ranged_attack_shoot": {
                "remove": {
                    "component_groups": [
                        "task:ranged_attack_shoot"
                    ]
                }
            },

            "task:on_knockback_players": {
                "remove": {
                    "component_groups": [
                        "task:detect_nearby_players"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:knockback_players"
                    ]
                }
            },
            "task:on_knockback_end": {
                "remove": {
                    "component_groups": [
                        "task:knockback_players"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:knockback_delay"
                    ]
                }
            },
            "task:on_knockback_delay_end": {
                "remove": {
                    "component_groups": [
                        "task:knockback_delay"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:detect_nearby_players"
                    ]
                }
            },

            "task:on_reached_armor_stand": {
                "trigger": {
                    "event": "task:despawn",
                    "target": "target"
                }
            },

            "task:on_hurt_by_player_arrow": {
                "add": {
                    "component_groups": [
                        "task:hurt_by_player_arrow"
                    ]
                }
            },
            "task:reset_hurt_by_player_arrow": {
                "remove": {
                    "component_groups": [
                        "task:hurt_by_player_arrow"
                    ]
                }
            },

            "task:on_fatal_damage": {
                "remove": {
                    "component_groups": [
                        "task:attack_mode_switcher",
                        "task:detect_nearby_players",
                        "task:melee_mode",
                        "task:ranged_mode",
                        "task:knockback_players",
                        "task:knockback_delay",
                        "task:detect_nearby_armor_stands"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:play_death_animation"
                    ]
                }
            },

            "task:despawn": {
                "remove": {
                    "component_groups": [
                        "task:play_death_animation"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:despawn"
                    ]
                }
            },

            "task:set_full_collision": {
                "remove": {
                    "component_groups": [
                        "task:hurt_collision"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:full_collision"
                    ]
                }
            },
            "task:set_hurt_collision": {
                "remove": {
                    "component_groups": [
                        "task:full_collision"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:hurt_collision"
                    ]
                }
            },

            "task:set_texture_1": {
                "remove": {
                    "component_groups": [
                        "task:texture_2",
                        "task:texture_3"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:texture_1"
                    ]
                }
            },
            "task:set_texture_2": {
                "remove": {
                    "component_groups": [
                        "task:texture_1",
                        "task:texture_3"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:texture_2"
                    ]
                }
            },
            "task:set_texture_3": {
                "remove": {
                    "component_groups": [
                        "task:texture_1",
                        "task:texture_2"
                    ]
                },
                "add": {
                    "component_groups": [
                        "task:texture_3"
                    ]
                }
            }
        }
    }
}